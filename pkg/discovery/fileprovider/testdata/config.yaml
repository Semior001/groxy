version: 1

not-matched:
  status: { code: "NOT_FOUND", message: "some custom not found" }

rules:
  - match:
      uri: "com.github.Semior001.groxy.example.mock.ExampleService/Stub"
      header: { test: true }
      body: |
        message StubRequest {
            option (groxypb.target) = true; 
            string message = 1 [(groxypb.value)  = "needed value"];
        }
    respond:
      body: |
        message StubResponse {
            // this option specifies that the message is a response
            option              (groxypb.target) = true; 
            string message = 1 [(groxypb.value)  = "needed value received"];
            int32 code     = 2 [(groxypb.value)  = "200"];
        }

  - match:
      uri: "com.github.Semior001.groxy.example.mock.ExampleService/Stub"
      body: |
        message StubRequest {
            option (groxypb.target) = true; 
            string message = 1 [(groxypb.value)  = "needed value"];
        }
    respond:
      body: |
        message StubResponse {
            // this option specifies that the message is a response
            option              (groxypb.target) = true; 
            string message = 1 [(groxypb.value)  = "lol that works"];
            int32 code     = 2 [(groxypb.value)  = "400"];
        }

  - match: { uri: "com.github.Semior001.groxy.example.mock.ExampleService/Stub" }
    respond:
      body: |
        message Dependency {
            string some_dependant_value = 6;
        }
        
        message StubResponse {
            // this option specifies that the message is a response
            option (groxypb.target) = true; 
            Dependency dependency = 3 [(groxypb.value)  = '{"some_dependant_value": "Hello, World!"}'];
        }

  - match: { uri: "com.github.Semior001.groxy.example.mock.ExampleService/Error" }
    respond:
      status: { code: "INVALID_ARGUMENT", message: "invalid request" }
      metadata:
        header: { X-Request-Id: "123" }
        trailer: { Powered-By: "groxy" }
