# https://taskfile.dev

version: '3'

includes:
  example: { taskfile: _example/Taskfile.yml }
  bench: { taskfile: bench.taskfile.yml }

env:
  GO_MODULE: github.com/Semior001/groxy

tasks:
  install:
    desc: "builds and install local groxy version"
    cmd: |
      GROXY_VERSION=$(git describe --tags --long)
      go install -ldflags "-X 'main.version=$GROXY_VERSION-local' -s -w" ./cmd/...

  check:
    desc: "run all CI/CD checks"
    deps:
      - test
      - lint

  run:
    desc: "run application from local source"
    cmd: |
      go run -ldflags "-X 'main.version=local'" ./cmd/groxy {{.CLI_ARGS}}

  lint:
    desc: "lint"
    cmd: |
      go tool -modfile=tools/golangci-lint/go.mod \
        golangci-lint run \
          --timeout 5m \
          --issues-exit-code 1 \
          --config .golangci.yml ./...

  test:
    desc: "run tests"
    cmd: |
      go test -race -count=1 ./...

  gen:
    desc: "generate all"
    deps:
      - gen:jsonschema
      - gen:example
      - gen:annotation
      - gen:testdata

  gen:jsonschema:
    desc: "generate jsonschema"
    cmd: |
      go run ./cmd/jsonschemagen \
        --title "gRoxy Configuration Schema" \
        --description "JSON schema for gRoxy proxy configuration files" \
        --schema-version "https://json-schema.org/draft/2020-12/schema" \
        --id "https://raw.githubusercontent.com/Semior001/groxy/refs/heads/master/schema.json" \
        --output schema.json \
        {{.CLI_ARGS}}

  gen:annotation:
    desc: "generate annotation"
    cmd: |
      protoc --go_out=./groxypb --go_opt=module=$GO_MODULE/groxypb ./groxypb/*.proto

  gen:example:
    desc: "generate example"
    cmd: |
      protoc \
        --go_out=./_example/gen      --go_opt=module=$GO_MODULE/_example/gen \
        --go-grpc_out=./_example/gen --go-grpc_opt=module=$GO_MODULE/_example/gen \
        ./_example/*.proto

  gen:testdata:
    desc: "generate testdata"
    cmd: |
      protoc \
        --go_out=./pkg/protodef/testdata --go_opt=module=$GO_MODULE/pkg/protodef/testdata \
        --go-grpc_out=./pkg/protodef/testdata --go-grpc_opt=module=$GO_MODULE/pkg/protodef/testdata \
        ./pkg/protodef/testdata/*.gen.proto
      protoc \
        --go_out=./pkg/grpcx/grpctest --go_opt=module=$GO_MODULE/pkg/grpcx/grpctest \
        --go-grpc_out=./pkg/grpcx/grpctest --go-grpc_opt=module=$GO_MODULE/pkg/grpcx/grpctest \
        ./pkg/grpcx/grpctest/*.proto